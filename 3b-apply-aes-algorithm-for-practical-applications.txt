import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;
import java.util.Scanner;

public class AESExample {

    public static void main(String[] args) {
        try {
            // Generate AES key
            KeyGenerator keyGenerator = KeyGenerator.getInstance("AES");
            keyGenerator.init(128);
            SecretKey secretKey = keyGenerator.generateKey();

            // Create AES cipher instance with CBC mode and PKCS5Padding
            Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");

            // Initialize cipher for encryption with the generated key
            cipher.init(Cipher.ENCRYPT_MODE, secretKey);

            // Get user input for data to be encrypted
            Scanner scanner = new Scanner(System.in);
            System.out.print("Enter the data to be encrypted: ");
            String inputData = scanner.nextLine();

            // Encrypt the input data
            byte[] encryptedData = cipher.doFinal(inputData.getBytes());

            // Convert encrypted data to hexadecimal for better display
            StringBuilder encryptedHex = new StringBuilder();
            for (byte b : encryptedData) {
                encryptedHex.append(String.format("%02X", b));
            }

            System.out.println("Encrypted data (hexadecimal): " + encryptedHex.toString());

            // Initialize cipher for decryption with the same key and parameters
            cipher.init(Cipher.DECRYPT_MODE, secretKey, cipher.getParameters());

            // Decrypt the encrypted data
            byte[] decryptedData = cipher.doFinal(encryptedData);

            System.out.println("Decrypted data: " + new String(decryptedData));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
