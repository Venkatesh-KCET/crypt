import java.util.*;

// Create class DiffieHellmanAlgorithmExample to calculate the key for two persons
public class DiffieHellmanAlgorithmExample {

    // main() method start
    public static void main(String[] args) {
        long P, G, x, a, y, b, ka, kb;

        // Create Scanner class object to take input from the user
        Scanner sc = new Scanner(System.in);
        System.out.println("Both users should agree upon the public keys G and P");

        // Take inputs for public keys from the user
        System.out.println("Enter value for public key G:");
        G = sc.nextLong();
        System.out.println("Enter value for public key P:");
        P = sc.nextLong();

        // Get input from the user for private keys a and b selected by User1 and User2
        System.out.println("Enter value for private key a selected by user1:");
        a = sc.nextLong();
        System.out.println("Enter value for private key b selected by user2:");
        b = sc.nextLong();

        // Call calculatePower() method to generate x and y keys
        x = calculatePower(G, a, P);
        y = calculatePower(G, b, P);

        // Call calculatePower() method to generate ka and kb secret keys after the exchange of x and y keys
        // Calculate secret key for User1
        ka = calculatePower(y, a, P);

        // Calculate secret key for User2
        kb = calculatePower(x, b, P);

        // Print secret keys of User1 and User2
        System.out.println("Secret key for User1 is: " + ka);
        System.out.println("Secret key for User2 is: " + kb);
    }

    // Create calculatePower() method to find the value of x ^ y mod P
    private static long calculatePower(long x, long y, long P) {
        long result = 0;
        if (y == 1) {
            return x;
        } else {
            result = (long) (Math.pow(x, y) % P);
            return result;
        }
    }
}
